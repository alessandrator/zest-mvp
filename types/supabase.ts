// This file will be generated by Supabase CLI
// For now, we'll use a minimal interface that matches our schema

export interface Database {
  public: {
    Tables: {
      schools: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          website: string | null;
          logo_url: string | null;
          address: string | null;
          contact_email: string | null;
          active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          website?: string | null;
          logo_url?: string | null;
          address?: string | null;
          contact_email?: string | null;
          active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          website?: string | null;
          logo_url?: string | null;
          address?: string | null;
          contact_email?: string | null;
          active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      brands: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          website: string | null;
          logo_url: string | null;
          industry: string | null;
          company_size: string | null;
          contact_email: string | null;
          verified: boolean;
          active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          website?: string | null;
          logo_url?: string | null;
          industry?: string | null;
          company_size?: string | null;
          contact_email?: string | null;
          verified?: boolean;
          active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          website?: string | null;
          logo_url?: string | null;
          industry?: string | null;
          company_size?: string | null;
          contact_email?: string | null;
          verified?: boolean;
          active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      user_profiles: {
        Row: {
          id: string;
          user_id: string;
          role: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
          first_name: string;
          last_name: string;
          avatar_url: string | null;
          phone: string | null;
          company: string | null;
          school_id: string | null;
          brand_id: string | null;
          bio: string | null;
          website: string | null;
          social_links: Record<string, any> | null;
          verified: boolean;
          active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          role: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
          first_name: string;
          last_name: string;
          avatar_url?: string | null;
          phone?: string | null;
          company?: string | null;
          school_id?: string | null;
          brand_id?: string | null;
          bio?: string | null;
          website?: string | null;
          social_links?: Record<string, any> | null;
          verified?: boolean;
          active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          role?: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
          first_name?: string;
          last_name?: string;
          avatar_url?: string | null;
          phone?: string | null;
          company?: string | null;
          school_id?: string | null;
          brand_id?: string | null;
          bio?: string | null;
          website?: string | null;
          social_links?: Record<string, any> | null;
          verified?: boolean;
          active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      campaigns: {
        Row: {
          id: string;
          brand_id: string;
          title: string;
          description: string;
          brief_url: string | null;
          budget_min: number | null;
          budget_max: number | null;
          target_audience: string[] | null;
          requirements: string[] | null;
          deliverables: string[] | null;
          deadline: string | null;
          status: 'draft' | 'active' | 'paused' | 'completed' | 'cancelled';
          public: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          brand_id: string;
          title: string;
          description: string;
          brief_url?: string | null;
          budget_min?: number | null;
          budget_max?: number | null;
          target_audience?: string[] | null;
          requirements?: string[] | null;
          deliverables?: string[] | null;
          deadline?: string | null;
          status?: 'draft' | 'active' | 'paused' | 'completed' | 'cancelled';
          public?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          brand_id?: string;
          title?: string;
          description?: string;
          brief_url?: string | null;
          budget_min?: number | null;
          budget_max?: number | null;
          target_audience?: string[] | null;
          requirements?: string[] | null;
          deliverables?: string[] | null;
          deadline?: string | null;
          status?: 'draft' | 'active' | 'paused' | 'completed' | 'cancelled';
          public?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      campaign_applications: {
        Row: {
          id: string;
          campaign_id: string;
          user_id: string;
          message: string;
          portfolio_url: string | null;
          expected_budget: number | null;
          status: 'pending' | 'approved' | 'rejected' | 'completed';
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          campaign_id: string;
          user_id: string;
          message: string;
          portfolio_url?: string | null;
          expected_budget?: number | null;
          status?: 'pending' | 'approved' | 'rejected' | 'completed';
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          campaign_id?: string;
          user_id?: string;
          message?: string;
          portfolio_url?: string | null;
          expected_budget?: number | null;
          status?: 'pending' | 'approved' | 'rejected' | 'completed';
          created_at?: string;
          updated_at?: string;
        };
      };
      notifications: {
        Row: {
          id: string;
          user_id: string;
          title: string;
          message: string;
          type: 'info' | 'success' | 'warning' | 'error';
          read: boolean;
          action_url: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          title: string;
          message: string;
          type?: 'info' | 'success' | 'warning' | 'error';
          read?: boolean;
          action_url?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          title?: string;
          message?: string;
          type?: 'info' | 'success' | 'warning' | 'error';
          read?: boolean;
          action_url?: string | null;
          created_at?: string;
        };
      };
      access_requests: {
        Row: {
          id: string;
          email: string;
          role: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
          first_name: string;
          last_name: string;
          company: string | null;
          message: string;
          status: string;
          processed_by: string | null;
          processed_at: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          email: string;
          role: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
          first_name: string;
          last_name: string;
          company?: string | null;
          message: string;
          status?: string;
          processed_by?: string | null;
          processed_at?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          email?: string;
          role?: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
          first_name?: string;
          last_name?: string;
          company?: string | null;
          message?: string;
          status?: string;
          processed_by?: string | null;
          processed_at?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      user_role: 'super_admin' | 'brand' | 'school_admin' | 'student' | 'consumer' | 'influencer';
      campaign_status: 'draft' | 'active' | 'paused' | 'completed' | 'cancelled';
      application_status: 'pending' | 'approved' | 'rejected' | 'completed';
      notification_type: 'info' | 'success' | 'warning' | 'error';
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
}